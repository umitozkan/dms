version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: dms-mysql
    restart: unless-stopped
    command: ["mysqld"]
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: dms
      MYSQL_USER: dms
      MYSQL_PASSWORD: secret
      TZ: Europe/Istanbul
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dubbing-network

  laravel-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dms-app-local
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    environment:
      COMPOSER_ALLOW_SUPERUSER: "1"
      APP_ENV: local
      APP_DEBUG: "true"
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: dms
      DB_USERNAME: dms
      DB_PASSWORD: secret
      DB_CHARSET: utf8mb4
      DB_COLLATION: utf8mb4_unicode_ci
    depends_on:
      - db
    command:
      - sh
      - -lc
      - |
          set -e
          composer install --no-interaction --prefer-dist
          [ -f .env ] || cp .env.example .env
          if grep -q '^APP_KEY=.' .env; then echo "APP_KEY mevcut, atlanÄ±yor"; else php artisan key:generate --force; fi
          mkdir -p storage/framework/cache/data storage/framework/sessions storage/framework/views storage/logs bootstrap/cache
          chown -R www-data:www-data storage bootstrap/cache
          chmod -R ug+rwX storage bootstrap/cache
          php-fpm -F
    networks:
      - dubbing-network

  nginx:
    image: nginx:1.25-alpine
    container_name: dms-nginx-local
    restart: unless-stopped
    depends_on:
      - laravel-app
    ports:
      - "8001:80"
    volumes:
      - ./:/var/www/html:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - dubbing-network

networks:
  dubbing-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local


